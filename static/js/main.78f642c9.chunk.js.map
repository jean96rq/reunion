{"version":3,"sources":["components/Form.js","components/Reunion.js","App.js","reportWebVitals.js","index.js"],"names":["Form","crearReunion","useState","nombreReunion","nombre","fecha","hora","motivo","reunion","actulizarReunion","actulizarState","e","target","name","value","error","actualizarError","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","className","Reunion","reu","eliminarReunion","onClick","App","reunionInicial","JSON","parse","localStorage","getItem","guardarReunion","useEffect","setItem","stringify","filter","nuevaReunion","mensaje","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAuGeA,MAnGf,YAAiC,IAAjBC,EAAgB,EAAhBA,aAEZ,EAAoCC,mBAAS,CACzCC,cAAe,GACfC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,OAAQ,KALZ,mBAAOC,EAAP,KAAgBC,EAAhB,KAQMC,EAAiB,SAAAC,GACnBF,EAAiB,2BACVD,GADS,kBAEXG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAI1BX,EAA+CK,EAA/CL,cAAeC,EAAgCI,EAAhCJ,OAAQC,EAAwBG,EAAxBH,MAAOC,EAAiBE,EAAjBF,KAAMC,EAAWC,EAAXD,OAE5C,EAAiCL,oBAAS,GAA1C,mBAAOa,EAAP,KAAcC,EAAd,KA6BA,OACI,cAAC,WAAD,UACI,uBACIC,SA9BU,SAAAN,GAClBA,EAAEO,iBAG2B,KAAzBf,EAAcgB,QAAmC,KAAlBf,EAAOe,QAAkC,KAAjBd,EAAMc,QAAiC,KAAhBb,EAAKa,QAAmC,KAAlBZ,EAAOY,QAK/GH,GAAgB,GAIhBR,EAAQY,GAAKC,cAGbpB,EAAaO,GAEbC,EAAiB,CACbN,cAAe,GACfC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,OAAQ,MAlBRS,GAAgB,IAwBhB,UAGI,uBACIM,KAAK,OACLC,YAAY,oBACZV,KAAK,gBACLW,SAAUd,EACVI,MAAOX,IAEX,uBACImB,KAAK,OACLC,YAAY,yBACZV,KAAK,SACLW,SAAUd,EACVI,MAAOV,IAEX,uBACIkB,KAAK,OACLT,KAAK,QACLW,SAAUd,EACVI,MAAOT,IAEX,uBACIiB,KAAK,OACLT,KAAK,OACLW,SAAUd,EACVI,MAAOR,IAEX,0BACIO,KAAK,SACLU,YAAY,oBACZC,SAAUd,EACVI,MAAOP,IAEVQ,EAAQ,mBAAGU,UAAU,UAAb,8CAA8D,KACvE,wBACIH,KAAK,SADT,iCC9DDI,MAzBf,YAA0C,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,gBAMnB,OACI,sBAAKH,UAAU,UAAf,UACI,6BAAKE,EAAIxB,gBACT,6BAAKwB,EAAIvB,SACT,4BAAIuB,EAAIpB,SACR,6CAAgBoB,EAAItB,MAApB,IAA2B,8CAAiBsB,EAAIrB,WAChD,wBACGuB,QAAW,kBAAID,EAAgBD,EAAIP,KADtC,+BCsDGU,MAhEf,WAGE,IAAIC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,YAEjDJ,IACFA,EAAe,IAIjB,MAAkC7B,mBAAS6B,GAA3C,mBAAOvB,EAAP,KAAgB4B,EAAhB,KAEAC,qBAAU,WACaL,KAAKC,MAAMC,aAAaC,QAAQ,YAEnDD,aAAaI,QAAQ,UAAUN,KAAKO,UAAU/B,IAE9C0B,aAAaI,QAAQ,UAAUN,KAAKO,UAAU,OAEhD,CAAC/B,IAGH,IAMMoB,EAAkB,SAAAR,GACtBZ,EAAQgC,QAAO,SAAAb,GACb,IAAMc,EAAejC,EAAQgC,QAAO,SAAAb,GAAG,OAAGA,EAAIP,KAAOA,KACrDgB,EAAeK,OAIbC,EAA6B,IAAnBlC,EAAQmC,OAAe,8BAAgC,KAEvE,OACE,cAAC,WAAD,UACE,qBAAKlB,UAAU,YAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,OAAf,UACA,4DACA,cAAC,EAAD,CACExB,aAtBW,SAAA0B,GACnBS,EAAe,GAAD,mBACT5B,GADS,CAEZmB,WAsBI,sBAAKF,UAAU,YAAf,UACE,6BAAKiB,IACJlC,EAAQoC,KAAI,SAAAjB,GAAG,OACd,cAAC,EAAD,CAECA,IAAOA,EACPC,gBAAmBA,GAFZD,EAAIP,kBC5CXyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78f642c9.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Form({ crearReunion }) {\r\n\r\n    const [reunion, actulizarReunion] = useState({\r\n        nombreReunion: '',\r\n        nombre: '',\r\n        fecha: '',\r\n        hora: '',\r\n        motivo: ''\r\n    });\r\n\r\n    const actulizarState = e => {\r\n        actulizarReunion({\r\n            ...reunion,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const { nombreReunion, nombre, fecha, hora, motivo } = reunion;\r\n\r\n    const [error, actualizarError] = useState(false);\r\n\r\n    const submitReunion = e => {\r\n        e.preventDefault();\r\n        //validar\r\n\r\n        if (nombreReunion.trim() === '' || nombre.trim() === '' || fecha.trim() === '' || hora.trim() === '' || motivo.trim() === '') {\r\n            actualizarError(true);\r\n\r\n            return;\r\n        }\r\n        actualizarError(false);\r\n\r\n        //asignar un ID\r\n\r\n        reunion.id = uuidv4();\r\n\r\n        //Crear la reunion\r\n        crearReunion(reunion)\r\n        //Reniciar formulario\r\n        actulizarReunion({\r\n            nombreReunion: '',\r\n            nombre: '',\r\n            fecha: '',\r\n            hora: '',\r\n            motivo: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form\r\n                onSubmit={submitReunion}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre de Reunion\"\r\n                    name=\"nombreReunion\"\r\n                    onChange={actulizarState}\r\n                    value={nombreReunion}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Nombre del organizador\"\r\n                    name=\"nombre\"\r\n                    onChange={actulizarState}\r\n                    value={nombre}\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    name=\"fecha\"\r\n                    onChange={actulizarState}\r\n                    value={fecha}\r\n                />\r\n                <input\r\n                    type=\"time\"\r\n                    name=\"hora\"\r\n                    onChange={actulizarState}\r\n                    value={hora}\r\n                />\r\n                <textarea\r\n                    name=\"motivo\"\r\n                    placeholder=\"Motivo de reunion\"\r\n                    onChange={actulizarState}\r\n                    value={motivo}\r\n                ></textarea>\r\n                {error ? <p className=\"p-error\">Se deben llenar todos los campos</p> : null}\r\n                <button\r\n                    type=\"submit\"\r\n                >Crear reunion</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nForm.propTypes = {\r\n    crearReunion : PropTypes.func.isRequired\r\n  }\r\n  \r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Reunion({reu, eliminarReunion}) {\r\n\r\n    // const eliminarCita = id=>{\r\n\r\n    // }\r\n\r\n    return (\r\n        <div className=\"reunion\">\r\n            <h4>{reu.nombreReunion}</h4>\r\n            <h6>{reu.nombre}</h6>\r\n            <p>{reu.motivo}</p>\r\n            <small>Fecha : {reu.fecha} <strong> hora : {reu.hora}</strong></small>\r\n            <button\r\n               onClick = {()=>eliminarReunion(reu.id)}\r\n            >Eliminar &times;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nReunion.propTypes = {\r\n    reu : PropTypes.object.isRequired,\r\n    eliminarReunion : PropTypes.func.isRequired\r\n}\r\n  \r\n\r\nexport default Reunion\r\n","import { Fragment, useState, useEffect} from \"react\";\nimport Form from \"./components/Form\";\nimport Reunion from \"./components/Reunion\";\n\n\nfunction App() {\n\n\n  let reunionInicial = JSON.parse(localStorage.getItem('reunion'));\n\n  if(!reunionInicial){\n    reunionInicial=[];\n  }\n\n\n  const [reunion, guardarReunion] = useState(reunionInicial);\n\n  useEffect(()=>{\n    let reunionInicial = JSON.parse(localStorage.getItem('reunion'));\n    if(reunionInicial){\n      localStorage.setItem('reunion',JSON.stringify(reunion))\n    }else{\n      localStorage.setItem('reunion',JSON.stringify([]))\n    }\n  },[reunion])\n\n\n  const crearReunion = reu =>{\n    guardarReunion([\n      ...reunion, \n      reu\n    ]);\n  }\n  const eliminarReunion = id=>{\n    reunion.filter(reu =>{\n      const nuevaReunion = reunion.filter(reu =>reu.id !== id);\n      guardarReunion(nuevaReunion);\n    })\n  }\n \n  const mensaje = reunion.length === 0 ? 'No hay reuniones pendientes' : null;\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div className=\"container-form\">\n          <div className=\"form\">\n          <h3>Administrador de reuniones</h3>\n          <Form\n            crearReunion = {crearReunion}\n          />\n          </div>\n          <div className=\"cont-cita\">\n            <h2>{mensaje}</h2>\n            {reunion.map(reu =>(\n              <Reunion\n               key = {reu.id}\n               reu = {reu}\n               eliminarReunion = {eliminarReunion}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}